name: Test CI/CD

on:
  push:
    branches: [feature/docker]

jobs:
  build-app:
    runs-on: ubuntu-latest

    steps:
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x

      - name: Checkout code
        uses: actions/checkout@v1

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v1
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm i

      - name: Run Unit Test
        run: npm run test

      - name: Buil application
        run: npm run build

      - name: Build docker image
        run: docker build . -t riofed5/library-management:latest

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME}}
          password: ${{ secrets.DOCKERHUB_TOKEN}}

      - name: Push to dockerhub
        run: docker push riofed5/library-management:latest

      - name: Login to Heroku
        run: heroku container:Login
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_TOKEN}}

      - name: Push to heroku container registry
        run: heroku container:push -a library-management-pproject web

      - name: release container
        run: heroku container:release -a library-management-pproject web
